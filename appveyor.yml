#TEST
os: Visual Studio 2015

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\tests\\scripts\\appveyor\\run_with_env.cmd"
    PIP_ACCEL_LOG_FORMAT: "%(name)-18s %(levelname)s %(message)s"


  matrix:
    - PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4.3"
      PYTHON_ARCH: "32"
      WAF_ARGS: ""
#      DISTUTILS_USE_SDK: "1"
      VSVER: 14

#    - PYTHON: "C:\\Python34"
#      PYTHON_VERSION: "3.4.3"
#      PYTHON_ARCH: "64"
#      DISTUTILS_USE_SDK: "1"
#      VSVER: 14

#    - PYTHON: "C:\\Python35"
#      PYTHON_VERSION: "3.5.1"
#      PYTHON_ARCH: "32"
#      DISTUTILS_USE_SDK: "1"
#      VSVER: 14

#    - PYTHON: "C:\\Python35"
#      PYTHON_VERSION: "3.5.1"
#      PYTHON_ARCH: "64"
#      DISTUTILS_USE_SDK: "1"
#      VSVER: 14

matrix:
  allow_failures:
    # currently broken, see https://github.com/appveyor/ci/issues/414
    - VSVER: 14
    # not included in AppVeyor right now
    - platform: x64
      VSVER: 10

cache:
  # 'pip-accel' requires caching of downloaded pip packages.
  - "C:\\Users\\appveyor\\AppData\\Local\\pip"
  # Cache binary Python packages e.g. numpy, pycrypto
  - "C:\\Users\\appveyor\\AppData\\Roaming\\.pip-accel"

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"
  - "ECHO \"%APPVEYOR_SCHEDULED_BUILD%\""

install:
  - "ECHO Filesystem root:"
  - ps: "ls \"C:/\""
  
  - "ECHO Chocolatey tools:"
  - ps: "ls \"C:/Tools\""

  - "ECHO Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  
  - "SET PATH=C:\\tools\\mingw32\\bin;%PATH%"
  - "cd bootloader"
  - "python waf --msvc_version=\"msvc 12.0\" distclean all %WAF_ARGS%"
  - "cd .."

  ### Install the PyInsaller dependencies.

  # Install pip-accel to cache pypi packages and avoid compiling some packages.
  # (numpy or pycrypto take a lot of tome to compile).
  - "%CMD_IN_ENV% pip install pip-accel>=0.33"

  # Install lxml from anaconda.org channel since PyPI fails (or it takes too long).
  # See: https://github.com/pyinstaller/pyinstaller/pull/1638
  - "%CMD_IN_ENV% pip-accel install -i https://pypi.anaconda.org/giumas/simple lxml"

  # Install the PyInstaller test dependencies.
  - "%CMD_IN_ENV% pip-accel install --disable-pip-version-check --timeout 5 --retries 2 -r requirements-tools.txt"
  - "%CMD_IN_ENV% pip-accel install --disable-pip-version-check --timeout 5 --retries 2 -r requirements-win.txt"

  # Install PyInstaller into virtualenv.
  - "%CMD_IN_ENV% pip install -e ."

#  - ps: $env:VSCOMNTOOLS=(Get-Content ("env:VS" + "$env:VSVER" + "0COMNTOOLS"))
#  - echo "Using Visual Studio %VSVER%.0 at %VSCOMNTOOLS%"
#  - call "%VSCOMNTOOLS%\..\..\VC\vcvarsall.bat" %VCVARS_PLATFORM%

#  - python -V
  - bash -c "which python"
  - bash -c "python -V"
  - bash -c "which cl.exe"
  - bash -c "cl.exe /? 2>&1 | head -n 2"

  - "pip install --disable-pip-version-check --user --upgrade pip"

  # - "%PYTHON%/Scripts/pip.exe install -r requirements.txt"
  - "%CMD_IN_ENV% pip install -r requirements.txt"

build_script:
  # Build the compiled extension
#  - "%CMD_IN_ENV% pyinstaller otone_client_onefile.spec"

test_script:
  - "ECHO 'running pyinstaller tests...'"
  - "if not \"%APPVEYOR_SCHEDULED_BUILD%\" == \"True\" (
    %CMD_IN_ENV% %TEST1_CMD% )"


after_test:
  # If tests are successful, create binary packages for the project.
  - "ECHO 'after test...'"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*
